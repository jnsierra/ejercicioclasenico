apiVersion: v1
kind: ServiceAccount
metadata:
  # El nombre que usar치s para referenciar esta ServiceAccount
  name: nico-serviceaccount
  # Opcional: El namespace donde se crear치. Si se omite, se usar치 'default'.
  namespace: nico
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: dashboard-nico
  # Este rol existir치 en el namespace del proyecto
  namespace: nico
rules:
  - apiGroups:
      [
        "",
        "apps",
        "autoscaling",
        "batch",
        "extensions",
        "networking.k8s.io",
        "storage.k8s.io",
      ]
    resources:
      [
        "configmaps",
        "endpoints",
        "events",
        "ingresses",
        "persistentvolumeclaims",
        "pods",
        "podtemplates",
        "replicationcontrollers",
        "resourcequotas",
        "secrets",
        "serviceaccounts",
        "services",
        "deployments",
        "daemonsets",
        "replicasets",
        "statefulsets",
        "horizontalpodautoscalers",
        "cronjobs",
        "jobs",
        "networkpolicies",
        "storageclasses",
      ]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["apps"]
    resources: ["deployments/scale"]
    verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: nico-dashboard-readonly-binding
  namespace: nico
subjects:
  - kind: ServiceAccount
    name: nico-serviceaccount # La cuenta de servicio que creamos
    namespace: nico
roleRef:
  kind: Role
  name: dashboard-nico # El rol que creamos
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: global-reader
rules:
  - apiGroups: [""]
    resources: ["namespaces"]
    verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nico-global-readonly-binding
subjects:
  - kind: ServiceAccount
    name: nico-serviceaccount # La cuenta de servicio que creamos
    namespace: nico
roleRef:
  kind: ClusterRole
  name: global-reader # El rol que creamos
  apiGroup: rbac.authorization.k8s.io
